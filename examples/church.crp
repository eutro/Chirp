defn inc(n) = λf.λx.n(f)(f(x))
defn add(a, b) = λf.λx.a(f)(b(f)(x))
defn mul(a, b) = λf.λx.a(b(f))(x)
defn exp(a, b) = λf.λx.b(a)(f)(x)

defn zero(f) = λx.x
defn one = inc(zero)
defn two = add(one, one)
defn three = add(one, two)
defn four = mul(two, two)
defn five = add(two, three)
defn six = mul(two, three)
defn seven = add(four, three)
defn eight = exp(two, three)

defn church2int(n) = n(λx.x + 1)(0)

defn putI(i: i64): #() = foreign
defn println(): #() = foreign

// anything huge makes the inliner take a while, unsurprisingly
putI(church2int(exp(two, add(five, seven))))
println()
