defn cons(x, y) = λifpair,ifnull.ifpair(x, y)
defn nil = λifpair,ifnull.ifnull()

defn map(f, l) = l(λ car, cdr.cons(f(car), map(f, cdr)), λ.nil)
defn foldl(f, i, l) = let ip = i, il = l in loop: il(λ car, cdr.loop(f(ip, car), cdr), λ.ip)
defn rangeR(n) = if n == 0 then nil else cons(n, rangeR(n - 1))
defn inc(x) = x + 1
defn add(x, y) = x + y

defn printf(s: cstr, i: i64): #() = foreign

printf("%lld\n": cstr, foldl(add, 0, map(inc, rangeR(10))))
